app:
  klasses:

    - name: Tasks
      show:
        - Task
        - Status
        - Owner
        - Priority

      fields:
        - name: Task
          type: String

        - name: Type
          type: Select
          allow_null: true
          default: Feature
          values:
            - Feature
            - Bug
            - Chore

        - name: Status
          type: Select
          allow_null: false
          default: Queue
          values:
            - In Progress
            - Queue
            - Icebox
            - Done

        - name: Priority
          type: Select
          allow_null: true
          default: Low
          values:
            - Low
            - Medium
            - High
            - Urgent

        - name: Requester
          allow_null: false
          type: User

        - name: Owner
          allow_null: true
          type: User

        - name: Description
          type: Text

        - name: Comments
          type: TextMulti
          timestamps: true
          editable: true
          editors: true

        - name: Attachment
          type: File

      callbacks:
        after_create:
          email_owner_if_assigned: "mail(:to => User.where(:_id => @record['owner']).first.email, :from => \"#{@record.klass.app.id}@opzi.com\", :subject => \" You have been assigned to the task \'#{@record['task']}\'\", :body => \"http://#{ENV['HOST']}/#records/#{@record.id}\") unless @record.owner.empty?"
        after_update:
          email_comments: "change = field_changes('comments'); comment = (change[1]-change[0]).join(', '); addresses = get_email_addresses('owner', 'requester'); addresses.delete(@record.updater.email) if addresses ;mail(:to => addresses, :from => \"#{@record.klass.app.id}@opzi.com\", :subject => \" A comment was made for \'#{@record['task']}\'\", :body => \"A comment has been made: \'#{comment}\' \", :insert_record_ref => true) if (change && addresses && !comment.empty?)"
          email_owner_when_assigned: "change = field_changes('owner'); return if change[1].empty?; mail(:to => User.where(:_id => change[1]).first.email, :from => \"#{@record.klass.app.id}@opzi.com\", :subject => \" You have been assigned to the task \'#{@record['task']}\'\", :body => \"http://#{ENV['HOST']}/#records/#{@record.id}\") if (change)"
        after_email:
          attach_comment: "record = load_record_from_body; attach_text_multi(record, 'comments') if record"

      filters:

        - name: My Work - Current
          code: @record['owner'] == @current_user and @record['status'] == '0'

        - name: In Progress
          code: @record['status'] == '0'
        - name: Queue
          code: @record['status'] == '1'

        - name: Icebox
          code: @record['status'] == '2'

        - name: Done
          code: @record['status'] == '3'

        - name: All Not Done
          code: @record['status'] != '3'